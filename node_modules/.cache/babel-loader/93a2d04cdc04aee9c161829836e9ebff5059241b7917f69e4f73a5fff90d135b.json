{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { authUser } from './userApi';\nimport Cookies from 'js-cookie';\nexport const authUserAsync = createAsyncThunk('/login', async ({\n  email,\n  password\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authUser(email, password);\n    Cookies.set('token', response.token);\n    return response;\n  } catch (error) {\n    if (error.response && error.response.message) {\n      return rejectWithValue(error.response.message);\n    } else {\n      return rejectWithValue(error.message);\n    }\n  }\n});","map":{"version":3,"names":["createAsyncThunk","authUser","Cookies","authUserAsync","email","password","rejectWithValue","response","set","token","error","message"],"sources":["/home/misty/Projects/TrailerPeak/src/features/user/userActions.js"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { authUser } from './userApi'\nimport Cookies from 'js-cookie'\n\n\nexport const authUserAsync = createAsyncThunk(\n    '/login',\n    async ({ email, password }, {rejectWithValue }) => {\n        try {\n            const response = await authUser(email,password);\n            Cookies.set('token', response.token)\n            return response;\n\n        } catch(error) {\n            if (error.response && error.response.message) {\n                return rejectWithValue(error.response.message)\n            } else {\n                return rejectWithValue(error.message)\n            }\n        }\n    }\n);"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,QAAQ,QAAQ,WAAW;AACpC,OAAOC,OAAO,MAAM,WAAW;AAG/B,OAAO,MAAMC,aAAa,GAAGH,gBAAgB,CACzC,QAAQ,EACR,OAAO;EAAEI,KAAK;EAAEC;AAAS,CAAC,EAAE;EAACC;AAAgB,CAAC,KAAK;EAC/C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMN,QAAQ,CAACG,KAAK,EAACC,QAAQ,CAAC;IAC/CH,OAAO,CAACM,GAAG,CAAC,OAAO,EAAED,QAAQ,CAACE,KAAK,CAAC;IACpC,OAAOF,QAAQ;EAEnB,CAAC,CAAC,OAAMG,KAAK,EAAE;IACX,IAAIA,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAACH,QAAQ,CAACI,OAAO,EAAE;MAC1C,OAAOL,eAAe,CAACI,KAAK,CAACH,QAAQ,CAACI,OAAO,CAAC;IAClD,CAAC,MAAM;MACH,OAAOL,eAAe,CAACI,KAAK,CAACC,OAAO,CAAC;IACzC;EACJ;AACJ,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}