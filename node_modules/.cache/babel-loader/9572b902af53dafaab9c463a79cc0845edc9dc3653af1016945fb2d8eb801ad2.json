{"ast":null,"code":"var _jsxFileName = \"/home/misty/Projects/TrailerPeak/src/pages/movie.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Feature } from '../components';\nimport YouTube from 'react-youtube';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { fetchMagnetData } from '../features/magnet/magnetActions'; // Import the thunk\nimport ModalDialog from '../components/ModalDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = '64422b19ff6d242b3851b117c783ec08';\nexport default function Movie() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    id,\n    type,\n    name\n  } = useParams(); // Get movie ID from the URL\n  const [similarMovies, setSimilarMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null); // For storing selected movie\n  const [openDialog, setOpenDialog] = useState(false); // Control dialog visibility\n\n  // Access Redux state\n  const {\n    magnet: magnetData,\n    loading,\n    error\n  } = useSelector(state => state.magnet);\n  useEffect(() => {\n    dispatch(fetchMagnetData(name)); // Fetch trailer video using movie ID\n  }, [dispatch, name]);\n\n  // Fetch similar movies\n  useEffect(() => {\n    async function fetchSimilarMovies() {\n      try {\n        const response = await axios.get(`https://api.themoviedb.org/3/${type}/${id}/similar?api_key=${API_KEY}`);\n        setSimilarMovies(response.data.results);\n      } catch (error) {\n        console.error('Error fetching similar movies:', error);\n      }\n    }\n    if (id) {\n      fetchSimilarMovies();\n    }\n  }, [id, type]);\n\n  // YouTube component options\n  const opts = {\n    height: '390',\n    width: '640',\n    playerVars: {\n      autoplay: 1 // Auto-play the video\n    }\n  };\n\n  // Handle movie click to show modal\n  const handleMovieClick = movie => {\n    setSelectedMovie(movie);\n    setOpenDialog(true);\n  };\n\n  // Close dialog\n  const handleDialogClose = () => {\n    setOpenDialog(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Feature, {\n      children: [/*#__PURE__*/_jsxDEV(Feature.Title, {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : magnetData ? /*#__PURE__*/_jsxDEV(YouTube, {\n        videoId: magnetData,\n        opts: opts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No video available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Similar Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          overflowX: 'scroll'\n        },\n        children: similarMovies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginRight: '10px'\n          },\n          onClick: () => handleMovieClick(movie),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w200/${movie.poster_path}`,\n            alt: movie.title,\n            style: {\n              borderRadius: '8px',\n              cursor: 'pointer'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), selectedMovie && /*#__PURE__*/_jsxDEV(ModalDialog, {\n      open: openDialog,\n      handleClose: handleDialogClose,\n      view: selectedMovie,\n      crew: (selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.cast) || [],\n      type: type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Movie, \"7pXkXMgYghTm1Tv4XNpR4Qq4U48=\", false, function () {\n  return [useDispatch, useParams, useSelector];\n});\n_c = Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","Feature","YouTube","useParams","axios","fetchMagnetData","ModalDialog","jsxDEV","_jsxDEV","API_KEY","Movie","_s","dispatch","id","type","name","similarMovies","setSimilarMovies","selectedMovie","setSelectedMovie","openDialog","setOpenDialog","magnet","magnetData","loading","error","state","fetchSimilarMovies","response","get","data","results","console","opts","height","width","playerVars","autoplay","handleMovieClick","movie","handleDialogClose","children","Title","fileName","_jsxFileName","lineNumber","columnNumber","videoId","style","display","overflowX","map","marginRight","onClick","src","poster_path","alt","title","borderRadius","cursor","open","handleClose","view","crew","cast","_c","$RefreshReg$"],"sources":["/home/misty/Projects/TrailerPeak/src/pages/movie.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Feature } from '../components';\nimport YouTube from 'react-youtube';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { fetchMagnetData } from '../features/magnet/magnetActions'; // Import the thunk\nimport ModalDialog from '../components/ModalDialog';\n\nconst API_KEY = '64422b19ff6d242b3851b117c783ec08';\n\nexport default function Movie() {\n  const dispatch = useDispatch();\n  const { id, type, name } = useParams(); // Get movie ID from the URL\n  const [similarMovies, setSimilarMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null); // For storing selected movie\n  const [openDialog, setOpenDialog] = useState(false); // Control dialog visibility\n\n  // Access Redux state\n  const { magnet: magnetData, loading, error } = useSelector((state) => state.magnet);\n\n  useEffect(() => {\n    dispatch(fetchMagnetData(name)); // Fetch trailer video using movie ID\n  }, [dispatch, name]);\n\n  // Fetch similar movies\n  useEffect(() => {\n    async function fetchSimilarMovies() {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/${type}/${id}/similar?api_key=${API_KEY}`\n        );\n        setSimilarMovies(response.data.results);\n      } catch (error) {\n        console.error('Error fetching similar movies:', error);\n      }\n    }\n\n    if (id) {\n      fetchSimilarMovies();\n    }\n  }, [id, type]);\n\n  // YouTube component options\n  const opts = {\n    height: '390',\n    width: '640',\n    playerVars: {\n      autoplay: 1, // Auto-play the video\n    },\n  };\n\n  // Handle movie click to show modal\n  const handleMovieClick = (movie) => {\n    setSelectedMovie(movie);\n    setOpenDialog(true);\n  };\n\n  // Close dialog\n  const handleDialogClose = () => {\n    setOpenDialog(false);\n  };\n\n  return (\n    <div>\n      <Feature>\n        <Feature.Title>{name}</Feature.Title>\n\n        {loading ? (\n          <p>Loading...</p>\n        ) : error ? (\n          <p>Error: {error}</p>\n        ) : magnetData ? (\n          <YouTube videoId={magnetData} opts={opts} />\n        ) : (\n          <p>No video available.</p>\n        )}\n\n        <h2>Similar Movies</h2>\n        <div style={{ display: 'flex', overflowX: 'scroll' }}>\n          {similarMovies.map((movie) => (\n            <div key={movie.id} style={{ marginRight: '10px' }} onClick={() => handleMovieClick(movie)}>\n              <img\n                src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n                alt={movie.title}\n                style={{ borderRadius: '8px', cursor: 'pointer' }}\n              />\n              <p>{movie.title}</p>\n            </div>\n          ))}\n        </div>\n      </Feature>\n\n      {/* MovieDialog to display selected movie details */}\n      {selectedMovie && (\n        <ModalDialog\n          open={openDialog}\n          handleClose={handleDialogClose}\n          view={selectedMovie}\n          crew={selectedMovie?.cast || []}\n          type={type}\n        />\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}